- include_javascript 'admin/controls'
- default_filter_name = "#{@event.filter_id}"
- content_for :page_scripts, event_edit_javascripts

- form_for [:admin, @event] do |f|
  .form-area
    #event_form_area
      %p.title
        = f.label :name, t('events_calendar.form.label.name')
        = f.text_field :name, :class => 'textbox', :maxlength => 255
      %p.title
        %label{:for => 'event_category'}
          = t('events_calendar.form.label.category')
          %span.note (#{t('optional')})
        = text_field_with_auto_complete :event, :category, { :class => 'textbox', :maxlength => 255 }, { :method => :get, :min_chars => 1, :frequency => 0.5 }
      %p.title
        %label{:for => 'event_location'}
          = t('events_calendar.form.label.location')
          %span.note (#{t('optional')})
        = f.text_field :location, :class => 'textbox', :maxlength => 255
      .schedule
        .date
          %p.title
            = f.label :date, t('events_calendar.form.label.date')
            = calendar_date_select_tag 'event[date]', @event.date || Date.today, :time => false, :clear_button => false, :year_range => [0.years.ago, 5.years.from_now], :embedded => true
        .time
          %p.title
            %label{:for => 'event_start_time'}
              = t('events_calendar.form.label.start_time')
              %br
              %span.note (#{t('optional')})
            = f.time_select :start_time, { :default => @event.start_time ? @event.start_time : nil, :time_separator => '', :minute_interval => 15, :include_blank => true, :simple_time_select => true }
        .time
          %p.title
            %label{:for => 'event_end_time'}
              = t('events_calendar.form.label.end_time')
              %br
              %span.note (#{t('optional')})
            = f.time_select :end_time, { :default => @event.end_time ? @event.end_time : nil, :time_separator => '', :minute_interval => 15, :include_blank => true, :simple_time_select => true }
        .timezone
          %p.title
            = f.label :timezone, t('events_calendar.form.label.timezone')
            = f.time_zone_select :timezone
      %p.title
        = f.label :description_content, t('events_calendar.form.label.description')
        %p.filter
          = f.label :description_filter_id, t('filter')
          = f.select :filter_id, [[t('select.none'), '']] + TextFilter.descendants.map { |tf| tf.filter_name }.sort, {}, { :id => 'event_description_filter_id' }
          %span.reference_links
            #{t('reference')}:
            %span{:id => 'filter-reference-link-event'}
              = link_to_function t('events_calendar.form.label.filter'), "loadFilterReference();"
        ~ f.text_area :description, :class => 'textbox', :size => '60x10', :id => 'event_description_content'
  %span.clear &nbsp;
  = javascript_tag "$('event_name').activate()"
  %p.buttons
    = save_model_button(@event)
    = save_model_and_continue_editing_button(@event)
    = t('or')
    = link_to(t('cancel'), admin_events_url)

- content_for :popups do
  #filter-reference-popup.popup{ :style => "display:none;" }
    %h3
      %span#filter-type= default_filter_name
      = t('reference')
    #filter-reference= filter_reference
    %p
      = link_to t('close'), "#", :class => 'close'

- if defined?(TextileEditorExtension)
  = render 'admin/pages/link_popup'
  = render 'admin/pages/image_popup'
